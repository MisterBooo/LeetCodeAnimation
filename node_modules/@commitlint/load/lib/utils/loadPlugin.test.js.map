{"version":3,"sources":["../../src/utils/loadPlugin.test.js"],"names":["proxyquire","require","noCallThru","noPreserveCache","beforeEach","t","plugins","plugin","scopedPlugin","stubbedLoadPlugin","context","data","is","throws","undefined"],"mappings":";;AAAA;;;;;;AACA,MAAMA,aAAaC,QAAQ,YAAR,EACjBC,UADiB,GAEjBC,eAFiB,EAAnB;;AAIA,cAAKC,UAAL,CAAgBC,KAAK;AACpB,OAAMC,UAAU,EAAhB;AACA,OAAMC,SAAS,EAAf;AACA,OAAMC,eAAe,EAArB;AACA,OAAMC,oBAAoBT,WAAW,cAAX,EAA2B;AACpD,+BAA6BO,MADuB;AAEpD,sCAAoCC;AAFgB,EAA3B,CAA1B;AAIAH,GAAEK,OAAF,CAAUC,IAAV,GAAiB;AAChBL,SADgB;AAEhBC,QAFgB;AAGhBC,cAHgB;AAIhBC;AAJgB,EAAjB;AAMA,CAdD;;AAgBA,mBAAK,oDAAL,EAA2DJ,KAAK;AAAA,uBAClBA,EAAEK,OAAF,CAAUC,IADQ;AAAA,OACxDF,iBADwD,mBACxDA,iBADwD;AAAA,OACrCH,OADqC,mBACrCA,OADqC;AAAA,OAC5BC,MAD4B,mBAC5BA,MAD4B;;AAE/DE,mBAAkBH,OAAlB,EAA2B,SAA3B;AACAD,GAAEO,EAAF,CAAKN,QAAQ,SAAR,CAAL,EAAyBC,MAAzB;AACA,CAJD;;AAMA,mBAAK,mDAAL,EAA0DF,KAAK;AAAA,wBACjBA,EAAEK,OAAF,CAAUC,IADO;AAAA,OACvDF,iBADuD,oBACvDA,iBADuD;AAAA,OACpCH,OADoC,oBACpCA,OADoC;AAAA,OAC3BC,MAD2B,oBAC3BA,MAD2B;;AAE9DE,mBAAkBH,OAAlB,EAA2B,2BAA3B;AACAD,GAAEO,EAAF,CAAKN,QAAQ,SAAR,CAAL,EAAyBC,MAAzB;AACA,CAJD;;AAMA,mBAAK,oDAAL,EAA2DF,KAAK;AAAA,wBAC1BA,EAAEK,OAAF,CAAUC,IADgB;AAAA,OACxDF,iBADwD,oBACxDA,iBADwD;AAAA,OACrCH,OADqC,oBACrCA,OADqC;;AAE/DD,GAAEQ,MAAF,CAAS,MAAM;AACdJ,oBAAkBH,OAAlB,EAA2B,aAA3B;AACA,EAFD,EAEG,gDAFH;AAGAD,GAAEQ,MAAF,CAAS,MAAM;AACdJ,oBAAkBH,OAAlB,EAA2B,cAA3B;AACA,EAFD,EAEG,kCAFH;AAGAD,GAAEQ,MAAF,CAAS,MAAM;AACdJ,oBAAkBH,OAAlB,EAA2B,cAA3B;AACA,EAFD,EAEG,kCAFH;AAGAD,GAAEQ,MAAF,CAAS,MAAM;AACdJ,oBAAkBH,OAAlB,EAA2B,cAA3B;AACA,EAFD,EAEG,kCAFH;AAGA,CAdD;;AAgBA,mBAAK,mDAAL,EAA0DD,KAAK;AAAA,wBACzBA,EAAEK,OAAF,CAAUC,IADe;AAAA,OACvDF,iBADuD,oBACvDA,iBADuD;AAAA,OACpCH,OADoC,oBACpCA,OADoC;;AAE9DD,GAAEQ,MAAF,CAAS,MAAM;AACdJ,oBAAkBH,OAAlB,EAA2B,mBAA3B;AACA,EAFD,EAEG,wBAFH;AAGA,CALD;;AAOA,mBAAK,2DAAL,EAAkED,KAAK;AAAA,wBACnBA,EAAEK,OAAF,CAAUC,IADS;AAAA,OAC/DF,iBAD+D,oBAC/DA,iBAD+D;AAAA,OAC5CH,OAD4C,oBAC5CA,OAD4C;AAAA,OACnCE,YADmC,oBACnCA,YADmC;;AAEtEC,mBAAkBH,OAAlB,EAA2B,gBAA3B;AACAD,GAAEO,EAAF,CAAKN,QAAQ,gBAAR,CAAL,EAAgCE,YAAhC;AACA,CAJD;;AAMA,mBAAK,0DAAL,EAAiEH,KAAK;AAAA,wBAClBA,EAAEK,OAAF,CAAUC,IADQ;AAAA,OAC9DF,iBAD8D,oBAC9DA,iBAD8D;AAAA,OAC3CH,OAD2C,oBAC3CA,OAD2C;AAAA,OAClCE,YADkC,oBAClCA,YADkC;;AAErEC,mBAAkBH,OAAlB,EAA2B,kCAA3B;AACAD,GAAEO,EAAF,CAAKN,QAAQ,gBAAR,CAAL,EAAgCE,YAAhC;AACA,CAJD;;AAMA;AACA,mBAAK,kHAAL,EAAyHH,KAAK;AAAA,wBACxFA,EAAEK,OAAF,CAAUC,IAD8E;AAAA,OACtHF,iBADsH,oBACtHA,iBADsH;AAAA,OACnGH,OADmG,oBACnGA,OADmG;;AAE7HG,mBAAkBH,OAAlB,EAA2B,gBAA3B;AACAD,GAAEO,EAAF,CAAKN,QAAQ,SAAR,CAAL,EAAyBQ,SAAzB;AACA,CAJD;;AAMA,mBAAK,iHAAL,EAAwHT,KAAK;AAAA,wBACvFA,EAAEK,OAAF,CAAUC,IAD6E;AAAA,OACrHF,iBADqH,oBACrHA,iBADqH;AAAA,OAClGH,OADkG,oBAClGA,OADkG;;AAE5HG,mBAAkBH,OAAlB,EAA2B,kCAA3B;AACAD,GAAEO,EAAF,CAAKN,QAAQ,SAAR,CAAL,EAAyBQ,SAAzB;AACA,CAJD","file":"loadPlugin.test.js","sourcesContent":["import test from 'ava';\nconst proxyquire = require('proxyquire')\n\t.noCallThru()\n\t.noPreserveCache();\n\ntest.beforeEach(t => {\n\tconst plugins = {};\n\tconst plugin = {};\n\tconst scopedPlugin = {};\n\tconst stubbedLoadPlugin = proxyquire('./loadPlugin', {\n\t\t'commitlint-plugin-example': plugin,\n\t\t'@scope/commitlint-plugin-example': scopedPlugin\n\t});\n\tt.context.data = {\n\t\tplugins,\n\t\tplugin,\n\t\tscopedPlugin,\n\t\tstubbedLoadPlugin\n\t};\n});\n\ntest('should load a plugin when referenced by short name', t => {\n\tconst {stubbedLoadPlugin, plugins, plugin} = t.context.data;\n\tstubbedLoadPlugin(plugins, 'example');\n\tt.is(plugins['example'], plugin);\n});\n\ntest('should load a plugin when referenced by long name', t => {\n\tconst {stubbedLoadPlugin, plugins, plugin} = t.context.data;\n\tstubbedLoadPlugin(plugins, 'commitlint-plugin-example');\n\tt.is(plugins['example'], plugin);\n});\n\ntest('should throw an error when a plugin has whitespace', t => {\n\tconst {stubbedLoadPlugin, plugins} = t.context.data;\n\tt.throws(() => {\n\t\tstubbedLoadPlugin(plugins, 'whitespace ');\n\t}, /Whitespace found in plugin name 'whitespace '/u);\n\tt.throws(() => {\n\t\tstubbedLoadPlugin(plugins, 'whitespace\\t');\n\t}, /Whitespace found in plugin name/u);\n\tt.throws(() => {\n\t\tstubbedLoadPlugin(plugins, 'whitespace\\n');\n\t}, /Whitespace found in plugin name/u);\n\tt.throws(() => {\n\t\tstubbedLoadPlugin(plugins, 'whitespace\\r');\n\t}, /Whitespace found in plugin name/u);\n});\n\ntest(\"should throw an error when a plugin doesn't exist\", t => {\n\tconst {stubbedLoadPlugin, plugins} = t.context.data;\n\tt.throws(() => {\n\t\tstubbedLoadPlugin(plugins, 'nonexistentplugin');\n\t}, /Failed to load plugin/u);\n});\n\ntest('should load a scoped plugin when referenced by short name', t => {\n\tconst {stubbedLoadPlugin, plugins, scopedPlugin} = t.context.data;\n\tstubbedLoadPlugin(plugins, '@scope/example');\n\tt.is(plugins['@scope/example'], scopedPlugin);\n});\n\ntest('should load a scoped plugin when referenced by long name', t => {\n\tconst {stubbedLoadPlugin, plugins, scopedPlugin} = t.context.data;\n\tstubbedLoadPlugin(plugins, '@scope/commitlint-plugin-example');\n\tt.is(plugins['@scope/example'], scopedPlugin);\n});\n\n/* when referencing a scope plugin and omitting @scope/ */\ntest(\"should load a scoped plugin when referenced by short name, but should not get the plugin if '@scope/' is omitted\", t => {\n\tconst {stubbedLoadPlugin, plugins} = t.context.data;\n\tstubbedLoadPlugin(plugins, '@scope/example');\n\tt.is(plugins['example'], undefined);\n});\n\ntest(\"should load a scoped plugin when referenced by long name, but should not get the plugin if '@scope/' is omitted\", t => {\n\tconst {stubbedLoadPlugin, plugins} = t.context.data;\n\tstubbedLoadPlugin(plugins, '@scope/commitlint-plugin-example');\n\tt.is(plugins['example'], undefined);\n});\n"]}